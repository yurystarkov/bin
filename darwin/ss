#!/bin/sh
#
# ss: system summary
#
# by yury; in the public domain
# ascii from https://gitlab.com/jschx/ufetch

os="$(sw_vers -productName) $(sw_vers -productVersion)"
shell="${SHELL##*/}"
hw="$(sysctl -n hw.model)"
uptime="$(ut)"
memory="$(ram)"

if [ -x "$(command -v brew)" ]; then
	brew_packages="$(brew list --formula 2>/dev/null | wc -l)"
	cask_packages="$(brew list --cask 2>/dev/null | wc -l)"
	packages="$((brew_packages + cask_packages))"
else
	packages='unknown'
fi

packages="$(echo ${packages} | sed -e 's/^[ /t]*//')"

if [ -n "${DE}" ]; then
	ui="${DE}"
	uitype='DE'
elif [ -n "${WM}" ]; then
	ui="${WM}"
	uitype='WM'
else
	ui='Aqua'
	uitype='UI'
fi

if [ -x "$(command -v tput)" ]; then
	black="$(tput setaf 0 0 0 2>/dev/null)"
	bold="$(tput bold)"
	green="$(tput setaf 2)"
	red="$(tput setaf 1)"
	reset="$(tput sgr0)"
fi

lc="${reset}${bold}${black}"
ic="${reset}"
c0="${reset}${red}"
c1="${reset}${green}"

cat <<EOF
${c1}          _${reset}
${c1}         (/     ${lc}OS:        ${ic}${os}${reset}
${c0}    .---__--.   ${lc}HARDWARE:  ${ic}${hw}${reset}
${c0}   /         \  ${lc}MEMORY:    ${ic}${memory}${reset}
${c0}  |         /   ${lc}UPTIME:    ${ic}${uptime}${reset}
${c0}  |         \\_  ${lc}PACKAGES:  ${ic}${packages}${reset}
${c0}   \         /  ${lc}SHELL:     ${ic}${shell}${reset}
${c0}    \`._.-._.\`   ${lc}${uitype}:        ${ic}${ui}${reset}

EOF
